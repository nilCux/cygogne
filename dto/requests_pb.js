// source: requests.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.ModelTask', null, global);
goog.exportSymbol('proto.StableDiffusionParameter', null, global);
goog.exportSymbol('proto.StableDiffusionResponse', null, global);
goog.exportSymbol('proto.StableDiffusionText2ImageParameter', null, global);
goog.exportSymbol('proto.Task', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ModelTask = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ModelTask, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ModelTask.displayName = 'proto.ModelTask';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.StableDiffusionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.StableDiffusionResponse.repeatedFields_, null);
};
goog.inherits(proto.StableDiffusionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.StableDiffusionResponse.displayName = 'proto.StableDiffusionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.StableDiffusionParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.StableDiffusionParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.StableDiffusionParameter.displayName = 'proto.StableDiffusionParameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.StableDiffusionText2ImageParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.StableDiffusionText2ImageParameter.repeatedFields_, null);
};
goog.inherits(proto.StableDiffusionText2ImageParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.StableDiffusionText2ImageParameter.displayName = 'proto.StableDiffusionText2ImageParameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Task = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Task.repeatedFields_, null);
};
goog.inherits(proto.Task, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Task.displayName = 'proto.Task';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ModelTask.prototype.toObject = function(opt_includeInstance) {
  return proto.ModelTask.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ModelTask} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ModelTask.toObject = function(includeInstance, msg) {
  var f, obj = {
    stablediffusion: (f = msg.getStablediffusion()) && proto.StableDiffusionParameter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ModelTask}
 */
proto.ModelTask.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ModelTask;
  return proto.ModelTask.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ModelTask} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ModelTask}
 */
proto.ModelTask.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.StableDiffusionParameter;
      reader.readMessage(value,proto.StableDiffusionParameter.deserializeBinaryFromReader);
      msg.setStablediffusion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ModelTask.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ModelTask.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ModelTask} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ModelTask.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStablediffusion();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.StableDiffusionParameter.serializeBinaryToWriter
    );
  }
};


/**
 * optional StableDiffusionParameter stableDiffusion = 1;
 * @return {?proto.StableDiffusionParameter}
 */
proto.ModelTask.prototype.getStablediffusion = function() {
  return /** @type{?proto.StableDiffusionParameter} */ (
    jspb.Message.getWrapperField(this, proto.StableDiffusionParameter, 1));
};


/**
 * @param {?proto.StableDiffusionParameter|undefined} value
 * @return {!proto.ModelTask} returns this
*/
proto.ModelTask.prototype.setStablediffusion = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ModelTask} returns this
 */
proto.ModelTask.prototype.clearStablediffusion = function() {
  return this.setStablediffusion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ModelTask.prototype.hasStablediffusion = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.StableDiffusionResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.StableDiffusionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.StableDiffusionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.StableDiffusionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.StableDiffusionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    imagesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    parameters: jspb.Message.getFieldWithDefault(msg, 2, ""),
    info: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.StableDiffusionResponse}
 */
proto.StableDiffusionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.StableDiffusionResponse;
  return proto.StableDiffusionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.StableDiffusionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.StableDiffusionResponse}
 */
proto.StableDiffusionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addImages(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParameters(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.StableDiffusionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.StableDiffusionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.StableDiffusionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.StableDiffusionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getParameters();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated string images = 1;
 * @return {!Array<string>}
 */
proto.StableDiffusionResponse.prototype.getImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.StableDiffusionResponse} returns this
 */
proto.StableDiffusionResponse.prototype.setImagesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.StableDiffusionResponse} returns this
 */
proto.StableDiffusionResponse.prototype.addImages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.StableDiffusionResponse} returns this
 */
proto.StableDiffusionResponse.prototype.clearImagesList = function() {
  return this.setImagesList([]);
};


/**
 * optional string parameters = 2;
 * @return {string}
 */
proto.StableDiffusionResponse.prototype.getParameters = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.StableDiffusionResponse} returns this
 */
proto.StableDiffusionResponse.prototype.setParameters = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string info = 3;
 * @return {string}
 */
proto.StableDiffusionResponse.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.StableDiffusionResponse} returns this
 */
proto.StableDiffusionResponse.prototype.setInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.StableDiffusionParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.StableDiffusionParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.StableDiffusionParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.StableDiffusionParameter.toObject = function(includeInstance, msg) {
  var f, obj = {
    text2image: (f = msg.getText2image()) && proto.StableDiffusionText2ImageParameter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.StableDiffusionParameter}
 */
proto.StableDiffusionParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.StableDiffusionParameter;
  return proto.StableDiffusionParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.StableDiffusionParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.StableDiffusionParameter}
 */
proto.StableDiffusionParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.StableDiffusionText2ImageParameter;
      reader.readMessage(value,proto.StableDiffusionText2ImageParameter.deserializeBinaryFromReader);
      msg.setText2image(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.StableDiffusionParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.StableDiffusionParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.StableDiffusionParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.StableDiffusionParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getText2image();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.StableDiffusionText2ImageParameter.serializeBinaryToWriter
    );
  }
};


/**
 * optional StableDiffusionText2ImageParameter text2Image = 1;
 * @return {?proto.StableDiffusionText2ImageParameter}
 */
proto.StableDiffusionParameter.prototype.getText2image = function() {
  return /** @type{?proto.StableDiffusionText2ImageParameter} */ (
    jspb.Message.getWrapperField(this, proto.StableDiffusionText2ImageParameter, 1));
};


/**
 * @param {?proto.StableDiffusionText2ImageParameter|undefined} value
 * @return {!proto.StableDiffusionParameter} returns this
*/
proto.StableDiffusionParameter.prototype.setText2image = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.StableDiffusionParameter} returns this
 */
proto.StableDiffusionParameter.prototype.clearText2image = function() {
  return this.setText2image(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.StableDiffusionParameter.prototype.hasText2image = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.StableDiffusionText2ImageParameter.repeatedFields_ = [19,31];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.StableDiffusionText2ImageParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.StableDiffusionText2ImageParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.StableDiffusionText2ImageParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.StableDiffusionText2ImageParameter.toObject = function(includeInstance, msg) {
  var f, obj = {
    nonce: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 2, ""),
    secretid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    token: jspb.Message.getFieldWithDefault(msg, 4, ""),
    prompt: jspb.Message.getFieldWithDefault(msg, 5, ""),
    negativeprompt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    width: jspb.Message.getFieldWithDefault(msg, 7, 0),
    height: jspb.Message.getFieldWithDefault(msg, 8, 0),
    samplerIndex: jspb.Message.getFieldWithDefault(msg, 9, ""),
    steps: jspb.Message.getFieldWithDefault(msg, 10, 0),
    seed: jspb.Message.getFieldWithDefault(msg, 11, 0),
    restoreFace: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    subseed: jspb.Message.getFieldWithDefault(msg, 13, 0),
    subseedStrength: jspb.Message.getFieldWithDefault(msg, 14, 0),
    seedResizeFromW: jspb.Message.getFieldWithDefault(msg, 15, 0),
    seedResizeFromH: jspb.Message.getFieldWithDefault(msg, 16, 0),
    cfgScale: jspb.Message.getFieldWithDefault(msg, 17, 0),
    eta: jspb.Message.getFieldWithDefault(msg, 18, 0),
    stylesList: (f = jspb.Message.getRepeatedField(msg, 19)) == null ? undefined : f,
    enableHr: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    denoisingStrength: jspb.Message.getFieldWithDefault(msg, 21, 0),
    hrScale: jspb.Message.getFieldWithDefault(msg, 22, 0),
    hrUpscaler: jspb.Message.getFieldWithDefault(msg, 23, ""),
    hrSecondPassSteps: jspb.Message.getFieldWithDefault(msg, 24, 0),
    hrResizeX: jspb.Message.getFieldWithDefault(msg, 25, 0),
    hrResizeY: jspb.Message.getFieldWithDefault(msg, 26, 0),
    hrPrompt: jspb.Message.getFieldWithDefault(msg, 27, ""),
    hrNegativePrompt: jspb.Message.getFieldWithDefault(msg, 28, ""),
    tiling: jspb.Message.getBooleanFieldWithDefault(msg, 29, false),
    scriptName: jspb.Message.getFieldWithDefault(msg, 30, ""),
    scriptArgsList: (f = jspb.Message.getRepeatedField(msg, 31)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.StableDiffusionText2ImageParameter}
 */
proto.StableDiffusionText2ImageParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.StableDiffusionText2ImageParameter;
  return proto.StableDiffusionText2ImageParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.StableDiffusionText2ImageParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.StableDiffusionText2ImageParameter}
 */
proto.StableDiffusionText2ImageParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNonce(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecretid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrompt(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setNegativeprompt(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWidth(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSamplerIndex(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSteps(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSeed(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRestoreFace(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSubseed(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSubseedStrength(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSeedResizeFromW(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSeedResizeFromH(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCfgScale(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEta(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.addStyles(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableHr(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDenoisingStrength(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHrScale(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setHrUpscaler(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHrSecondPassSteps(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHrResizeX(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHrResizeY(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setHrPrompt(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setHrNegativePrompt(value);
      break;
    case 29:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTiling(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setScriptName(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.addScriptArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.StableDiffusionText2ImageParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.StableDiffusionText2ImageParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.StableDiffusionText2ImageParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.StableDiffusionText2ImageParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNonce();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSecretid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPrompt();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getNegativeprompt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getSamplerIndex();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getSteps();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getSeed();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getRestoreFace();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getSubseed();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getSubseedStrength();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getSeedResizeFromW();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getSeedResizeFromH();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getCfgScale();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getEta();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getStylesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      19,
      f
    );
  }
  f = message.getEnableHr();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getDenoisingStrength();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = message.getHrScale();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = message.getHrUpscaler();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getHrSecondPassSteps();
  if (f !== 0) {
    writer.writeInt32(
      24,
      f
    );
  }
  f = message.getHrResizeX();
  if (f !== 0) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = message.getHrResizeY();
  if (f !== 0) {
    writer.writeInt32(
      26,
      f
    );
  }
  f = message.getHrPrompt();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getHrNegativePrompt();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getTiling();
  if (f) {
    writer.writeBool(
      29,
      f
    );
  }
  f = message.getScriptName();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getScriptArgsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      31,
      f
    );
  }
};


/**
 * optional string Nonce = 1;
 * @return {string}
 */
proto.StableDiffusionText2ImageParameter.prototype.getNonce = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setNonce = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string TimeStamp = 2;
 * @return {string}
 */
proto.StableDiffusionText2ImageParameter.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string SecretId = 3;
 * @return {string}
 */
proto.StableDiffusionText2ImageParameter.prototype.getSecretid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setSecretid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Token = 4;
 * @return {string}
 */
proto.StableDiffusionText2ImageParameter.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string prompt = 5;
 * @return {string}
 */
proto.StableDiffusionText2ImageParameter.prototype.getPrompt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setPrompt = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string negativePrompt = 6;
 * @return {string}
 */
proto.StableDiffusionText2ImageParameter.prototype.getNegativeprompt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setNegativeprompt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 width = 7;
 * @return {number}
 */
proto.StableDiffusionText2ImageParameter.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 height = 8;
 * @return {number}
 */
proto.StableDiffusionText2ImageParameter.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string sampler_index = 9;
 * @return {string}
 */
proto.StableDiffusionText2ImageParameter.prototype.getSamplerIndex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setSamplerIndex = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 steps = 10;
 * @return {number}
 */
proto.StableDiffusionText2ImageParameter.prototype.getSteps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setSteps = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 seed = 11;
 * @return {number}
 */
proto.StableDiffusionText2ImageParameter.prototype.getSeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setSeed = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional bool restore_face = 12;
 * @return {boolean}
 */
proto.StableDiffusionText2ImageParameter.prototype.getRestoreFace = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setRestoreFace = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional int32 subseed = 13;
 * @return {number}
 */
proto.StableDiffusionText2ImageParameter.prototype.getSubseed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setSubseed = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 subseed_strength = 14;
 * @return {number}
 */
proto.StableDiffusionText2ImageParameter.prototype.getSubseedStrength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setSubseedStrength = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 seed_resize_from_w = 15;
 * @return {number}
 */
proto.StableDiffusionText2ImageParameter.prototype.getSeedResizeFromW = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setSeedResizeFromW = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int32 seed_resize_from_h = 16;
 * @return {number}
 */
proto.StableDiffusionText2ImageParameter.prototype.getSeedResizeFromH = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setSeedResizeFromH = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int32 cfg_scale = 17;
 * @return {number}
 */
proto.StableDiffusionText2ImageParameter.prototype.getCfgScale = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setCfgScale = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int32 eta = 18;
 * @return {number}
 */
proto.StableDiffusionText2ImageParameter.prototype.getEta = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setEta = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * repeated string styles = 19;
 * @return {!Array<string>}
 */
proto.StableDiffusionText2ImageParameter.prototype.getStylesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 19));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setStylesList = function(value) {
  return jspb.Message.setField(this, 19, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.addStyles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 19, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.clearStylesList = function() {
  return this.setStylesList([]);
};


/**
 * optional bool enable_hr = 20;
 * @return {boolean}
 */
proto.StableDiffusionText2ImageParameter.prototype.getEnableHr = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setEnableHr = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional int32 denoising_strength = 21;
 * @return {number}
 */
proto.StableDiffusionText2ImageParameter.prototype.getDenoisingStrength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setDenoisingStrength = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional int32 hr_scale = 22;
 * @return {number}
 */
proto.StableDiffusionText2ImageParameter.prototype.getHrScale = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setHrScale = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional string hr_upscaler = 23;
 * @return {string}
 */
proto.StableDiffusionText2ImageParameter.prototype.getHrUpscaler = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setHrUpscaler = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional int32 hr_second_pass_steps = 24;
 * @return {number}
 */
proto.StableDiffusionText2ImageParameter.prototype.getHrSecondPassSteps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setHrSecondPassSteps = function(value) {
  return jspb.Message.setProto3IntField(this, 24, value);
};


/**
 * optional int32 hr_resize_x = 25;
 * @return {number}
 */
proto.StableDiffusionText2ImageParameter.prototype.getHrResizeX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setHrResizeX = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional int32 hr_resize_y = 26;
 * @return {number}
 */
proto.StableDiffusionText2ImageParameter.prototype.getHrResizeY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setHrResizeY = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional string hr_prompt = 27;
 * @return {string}
 */
proto.StableDiffusionText2ImageParameter.prototype.getHrPrompt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setHrPrompt = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string hr_negative_prompt = 28;
 * @return {string}
 */
proto.StableDiffusionText2ImageParameter.prototype.getHrNegativePrompt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setHrNegativePrompt = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional bool tiling = 29;
 * @return {boolean}
 */
proto.StableDiffusionText2ImageParameter.prototype.getTiling = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 29, false));
};


/**
 * @param {boolean} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setTiling = function(value) {
  return jspb.Message.setProto3BooleanField(this, 29, value);
};


/**
 * optional string script_name = 30;
 * @return {string}
 */
proto.StableDiffusionText2ImageParameter.prototype.getScriptName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setScriptName = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * repeated string script_args = 31;
 * @return {!Array<string>}
 */
proto.StableDiffusionText2ImageParameter.prototype.getScriptArgsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 31));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.setScriptArgsList = function(value) {
  return jspb.Message.setField(this, 31, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.addScriptArgs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 31, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.StableDiffusionText2ImageParameter} returns this
 */
proto.StableDiffusionText2ImageParameter.prototype.clearScriptArgsList = function() {
  return this.setScriptArgsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Task.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Task.prototype.toObject = function(opt_includeInstance) {
  return proto.Task.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Task} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Task.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentials: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    modelid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    tasktype: jspb.Message.getFieldWithDefault(msg, 5, 0),
    prompttemplateid: jspb.Message.getFieldWithDefault(msg, 6, 0),
    argumentsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Task}
 */
proto.Task.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Task;
  return proto.Task.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Task} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Task}
 */
proto.Task.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentials(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModelid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTasktype(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrompttemplateid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addArguments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Task.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Task.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Task} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Task.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentials();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getModelid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTasktype();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPrompttemplateid();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getArgumentsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
};


/**
 * optional string credentials = 1;
 * @return {string}
 */
proto.Task.prototype.getCredentials = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Task} returns this
 */
proto.Task.prototype.setCredentials = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.Task.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Task} returns this
 */
proto.Task.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string userId = 3;
 * @return {string}
 */
proto.Task.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Task} returns this
 */
proto.Task.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 modelId = 4;
 * @return {number}
 */
proto.Task.prototype.getModelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Task} returns this
 */
proto.Task.prototype.setModelid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 taskType = 5;
 * @return {number}
 */
proto.Task.prototype.getTasktype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.Task} returns this
 */
proto.Task.prototype.setTasktype = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 promptTemplateId = 6;
 * @return {number}
 */
proto.Task.prototype.getPrompttemplateid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.Task} returns this
 */
proto.Task.prototype.setPrompttemplateid = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated string arguments = 7;
 * @return {!Array<string>}
 */
proto.Task.prototype.getArgumentsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Task} returns this
 */
proto.Task.prototype.setArgumentsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Task} returns this
 */
proto.Task.prototype.addArguments = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Task} returns this
 */
proto.Task.prototype.clearArgumentsList = function() {
  return this.setArgumentsList([]);
};


goog.object.extend(exports, proto);
